@model IEnumerable<WebFinalProject.Models.Purchase>

<table class="table vertical-table">
    <tr>
        <th>
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Game.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Game.Genre.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Game.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Game.ReleaseDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Game.AverageScore)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Game.Cost)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Quantity)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr class="tr-clickable" href='@Url.Action("Details", "Catalog", new { id = item.Game.Id })'>
            <td>
                @if (File.Exists(Server.MapPath("~/Content/Media/") + item.Game.Id + "image.png"))
                {
                    <img src="~/Content/Media/@(item.Game.Id + "image.png")" width="100" height="100" />
                }
                else
                {
                    <img src="~/Content/Media/no_pic.png" width="100" height="100" />
                }
            </td>
            <td class="td-c">
                @Html.DisplayFor(modelItem => item.Game.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Game.Genre.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Game.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Game.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Game.AverageScore)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Game.Cost)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td class="td-button">
                <button type="button" class="btn btn-default" data-toggle="modal" data-target="#removeModal">Remove</button>

                <!-- Remove Modal -->
                <div class="modal fade" id="removeModal" role="dialog">
                    <div class="modal-dialog">

                        <!-- Modal content-->
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                <h4 class="modal-title">Remove - @Html.DisplayFor(modelItem => item.Game.Title)</h4>
                            </div>

                            @*@using (Html.BeginForm("RemoveFromCart", "Transactions", FormMethod.Post))
                                {
                                    @Html.AntiForgeryToken();

                                    @Html.Hidden("GameId", item.Game.Id)

                                    <div class="modal-body">
                                        <div class="form-group">
                                            <div class="row">
                                                <label class="col-xs-5">Ammount to remove: </label>
                                                <input type="number" name="amount" min="1" max="@item.Quantity" class="col-xs-1 form-control" value="1" />
                                            </div>
                                        </div>
                                    </div>

                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                        <input type="submit" class="btn btn-success" value="Delete" />
                                    </div>
                                }*@

                            @using (Ajax.BeginForm("RemoveFromCart", "Transactions", new AjaxOptions
                                                    {
                                                        HttpMethod = "POST",
                                                        InsertionMode = InsertionMode.Replace,
                                                        UpdateTargetId = "Cart",
                                                        OnComplete = "hideModal()"
                                                    }))
                            {
                                @Html.AntiForgeryToken()

                                @Html.Hidden("GameId", item.Game.Id)

                                <div class="modal-body">
                                    <div class="form-group">
                                        <div class="row">
                                            <label class="col-xs-5">Ammount to remove: </label>
                                            <input type="number" name="amount" min="1" max="@item.Quantity" class="col-xs-1 form-control" value="1" />
                                        </div>
                                    </div>
                                </div>

                                <div class="modal-footer">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                    <input type="submit" class="btn btn-success" value="Remove" />
                                </div>
                            }
                        </div>

                    </div>
                </div>
            </td>
        </tr>
    }

</table>

@if (Model.Count() != 0)
{
    <div class="row">
        <div class="col-xs-2">
            @using (Ajax.BeginForm("EmptyCart", new AjaxOptions
                                         {
                                             HttpMethod = "POST",
                                             InsertionMode = InsertionMode.Replace,
                                             UpdateTargetId = "Cart"
                                         }))
            {
                @Html.AntiForgeryToken()

                <div class="form-actions no-color">
                    <input type="submit" value="Empty Cart" class="btn btn-primary" />
                </div>
            }
        </div>

        <div class="col-xs-2">
            <button type="button" class="btn btn-success" data-toggle="modal" data-target="#checkOutModal">Check Out</button>

            <!-- Check Out Modal -->
            <div class="modal fade" id="checkOutModal" role="dialog">
                <div class="modal-dialog">

                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">Continue check out?</h4>
                        </div>

                        <div class="modal-body">
                            <p>
                                <label class="col-xs-5">Total cost: @string.Format("{0:C}", Model.Sum(p => p.Quantity * p.Game.Cost))</label>
                            </p>
                        </div>

                        @using (Html.BeginForm("CheckOut", "Transactions", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()

                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                <input type="submit" class="btn btn-success" value="Check Out" />
                            </div>
                        }
                    </div>

                </div>
            </div>

        </div>

        <div class="col-xs-2 col-xs-offset-6">
            <p><b>Total: @string.Format("{0:C}", Model.Sum(p => p.Quantity * p.Game.Cost))</b></p>
        </div>
    </div>
}

